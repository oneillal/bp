# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  vmImage: 'windows-latest'

stages:
# build
- stage: lint
  displayName: Lint YAML
  jobs:
  - job: filevalidator
    pool:
      vmImage:  $(vmImage)
    steps:
      - task: Files-Validator@1
        inputs:
          rootDir: '$(Build.SourcesDirectory)'
          validateXML: false
          validateJSON: false
          validateYAML: true
          validatePS: false

- stage: build
  displayName: build stage
  dependsOn: lint
  jobs:
  - job: buildJob
    displayName: build job
    pool:
      vmImage:  $(vmImage)
    steps:
    # must be done before build
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'SonarCloud'
          organization: 'x00159362'
          scannerMode: 'MSBuild'
          projectKey: 'bpSonar'
          projectName: 'bpSonar'
          extraProperties: |
            sonar.exclusions=**/wwwroot/**/*

      - task: NuGetToolInstaller@1

      - task: NuGetCommand@2
        inputs:
          restoreSolution: '$(solution)'        

# Switch to DotNetCore for build and test
      - task: DotNetCoreCLI@2
        inputs:
          command: 'build'

#      - task: VSBuild@1
#        inputs:
#          solution: '$(solution)'
#          msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
#          platform: '$(buildPlatform)'
#          configuration: '$(buildConfiguration)'

#      - task: VSTest@2
#        inputs:
#          platform: '$(buildPlatform)'
#          configuration: '$(buildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: 'run tests'
        inputs:
          command: 'test'
          projects: '**/*Test*/*.csproj'
          arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

      - task: SonarCloudAnalyze@1
        displayName: 'run code analysis on SonarCloud'

      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Pipeline.Workspace)'
          artifactName: 'drop'

#      - task: PublishBuildArtifacts@1
#        displayName: 'publish build artefacts'
#        inputs:
#          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#          ArtifactName: 'drop'
#          publishLocation: 'Container'          

- stage: deploy
  displayName: deploy to Azure
  dependsOn: stage
  jobs:
  - deployment: deployAZ
    displayName: deploy to Azure
    pool:
      vmImage:  'vs2017-win2016'
    environment: 'bp'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'drop'
              targetPath: $(Build.ArtifactStagingDirectory)

          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure'
              appType: 'webApp'
              WebAppName: 'bponeillal'
              packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
